apiVersion: apps/v1
kind: StatefulSet
metadata:
  creationTimestamp: "2020-01-02T02:58:45Z"
  generation: 1
  labels:
    app: redis
    chart: redis-9.1.5
    heritage: Tiller
    release: redis-cluster
  name: redis-cluster-master
  namespace: default
  resourceVersion: "9121162"
  selfLink: /apis/apps/v1/namespaces/default/statefulsets/redis-cluster-master
  uid: ca8e2951-2d0b-11ea-a414-1eea9d3ba907
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: redis
      release: redis-cluster
      role: master
  serviceName: redis-cluster-headless
  template:
    metadata:
      annotations:
        checksum/configmap: 1609b2173f13e94b2213d4859597fddae6549354ae3e2c4a9846bdc4dcbe92cc
        checksum/health: f586783623052e7f9f5c3c9c7980d2defac907c7fd7f4dc05ac708084ba9af88
        checksum/secret: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        prometheus.io/port: "9121"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: redis
        chart: redis-9.1.5
        release: redis-cluster
        role: master
    spec:
      containers:
        - command:
            - /bin/bash
            - -c
            - |
              if [[ -n $REDIS_PASSWORD_FILE ]]; then
                password_aux=`cat ${REDIS_PASSWORD_FILE}`
                export REDIS_PASSWORD=$password_aux
              fi
              if [[ ! -f /opt/bitnami/redis/etc/master.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/master.conf /opt/bitnami/redis/etc/master.conf
              fi
              if [[ ! -f /opt/bitnami/redis/etc/redis.conf ]];then
                cp /opt/bitnami/redis/mounted-etc/redis.conf /opt/bitnami/redis/etc/redis.conf
              fi
              ARGS=("--port" "${REDIS_PORT}")
              ARGS+=("--protected-mode" "no")
              ARGS+=("--include" "/opt/bitnami/redis/etc/redis.conf")
              ARGS+=("--include" "/opt/bitnami/redis/etc/master.conf")
              /run.sh ${ARGS[@]}
          env:
            - name: REDIS_REPLICATION_MODE
              value: master
            - name: ALLOW_EMPTY_PASSWORD
              value: "yes"
            - name: REDIS_PORT
              value: "6379"
          image: docker.io/bitnami/redis:5.0.5-debian-9-r118
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_liveness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          name: redis-cluster
          ports:
            - containerPort: 6379
              name: redis
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - /health/ping_readiness_local.sh 5
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          securityContext:
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /health
              name: health
            - mountPath: /data
              name: redis-data
            - mountPath: /opt/bitnami/redis/mounted-etc
              name: config
            - mountPath: /opt/bitnami/redis/etc/
              name: redis-tmp-conf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 493
            name: redis-cluster-health
          name: health
        - configMap:
            defaultMode: 420
            name: redis-cluster
          name: config
        - emptyDir: {}
          name: redis-tmp-conf
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
    - metadata:
        creationTimestamp: null
        labels:
          app: redis
          component: master
          heritage: Tiller
          release: redis-cluster
        name: redis-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 8Gi
        volumeMode: Filesystem
      status:
        phase: Pending
status:
  collisionCount: 0
  currentReplicas: 1
  currentRevision: redis-cluster-master-7457f48678
  observedGeneration: 1
  readyReplicas: 1
  replicas: 1
  updateRevision: redis-cluster-master-7457f48678
  updatedReplicas: 1
